{"ast":null,"code":"var _jsxFileName = \"/Users/maxko/Desktop/IronHack Bootcamp/3-module/my-artsy-app/my-artsy-app-client/src/pages/HomePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:5005/api/home\";\nfunction HomePage() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  /* const {content, place, post_image} = postBody */\n\n  const [isLoading, setILoading] = useState(true);\n  const [artPosts, setArtposts] = useState([]);\n  /* const {artist, title, description, medium, year, dimensions, art_image} = artPostBody */\n\n  function getPosts() {\n    axios.get(API_URL).then(response => {\n      setPosts(response.data);\n      console.log(response.data);\n    }).catch(error => console.log(error));\n  }\n  function getArtposts() {\n    axios.get(API_URL).then(response => {\n      setArtposts(response.data);\n      console.log(response.data);\n    }).catch(error => console.log(error));\n  }\n  const PostsWithArtposts = [posts, artPosts];\n  useEffect(() => {\n    getPosts();\n    /* getArtposts() */\n  }, []);\n  useEffect(() => {\n    // useEffect hook that is called when `searchQuery` state variable changes\n    const fetchPosts = async () => {\n      try {\n        setLoading(true);\n        const {\n          data\n        } = await axios.get(API_URL); // Fetches beer data from API\n        setPosts(data); // sets `beers` state variable to the fetched data\n        setLoading(false); // sets `loading` to `false` after data is fetched\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchBeers(); // calls the `fetchBeers` function to fetch data\n  }, [searchQuery]); // useEffect dependency array, triggers the effect only when `searchQuery` changes\n  const handleSearchInputChange = event => {\n    // event handler for search input change\n    setSearchQuery(event.target.value); // sets `searchQuery` state variable to the value of the input\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: posts.map(post => {\n      /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: post.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }, post._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 4\n  }, this);\n}\n_s(HomePage, \"hzllm8F44Y/xP9VSArEDDWFGUVk=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","API_URL","HomePage","_s","posts","setPosts","isLoading","setILoading","artPosts","setArtposts","getPosts","get","then","response","data","console","log","catch","error","getArtposts","PostsWithArtposts","fetchPosts","setLoading","fetchBeers","searchQuery","handleSearchInputChange","event","setSearchQuery","target","value","children","map","post","content","fileName","_jsxFileName","lineNumber","columnNumber","_id","_c","$RefreshReg$"],"sources":["/Users/maxko/Desktop/IronHack Bootcamp/3-module/my-artsy-app/my-artsy-app-client/src/pages/HomePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from \"axios\"\n\nconst API_URL = \"http://localhost:5005/api/home\"\n\n\n\nfunction HomePage() {\n\n    const [posts, setPosts] = useState([])\n    /* const {content, place, post_image} = postBody */\n\n    const [isLoading, setILoading] = useState(true)\n\n    const [artPosts, setArtposts] = useState([])\n    /* const {artist, title, description, medium, year, dimensions, art_image} = artPostBody */\n\n    function getPosts(){\n        axios.get(API_URL)\n            .then((response) => {\n                setPosts(response.data)\n                console.log(response.data)\n            })\n                \n            \n            .catch(error => console.log(error))\n    }\n\n\n    function getArtposts(){\n        axios.get(API_URL)\n            .then((response) => {\n                setArtposts(response.data)\n                console.log(response.data)\n            })\n            .catch(error => console.log(error))\n    }\n\n    const PostsWithArtposts = [posts, artPosts]\n\n    useEffect(() => {\n        getPosts()\n        /* getArtposts() */\n    },[])\n\n    useEffect(() => { // useEffect hook that is called when `searchQuery` state variable changes\n        const fetchPosts = async () => { \n          try {\n            setLoading(true); \n            const { data } = await axios.get(API_URL); // Fetches beer data from API\n            setPosts(data); // sets `beers` state variable to the fetched data\n            setLoading(false); // sets `loading` to `false` after data is fetched\n          } catch (error) {\n            console.error(error);\n          }\n        };\n        fetchBeers(); // calls the `fetchBeers` function to fetch data\n      }, [searchQuery]); // useEffect dependency array, triggers the effect only when `searchQuery` changes\n      const handleSearchInputChange = (event) => { // event handler for search input change\n        setSearchQuery(event.target.value); // sets `searchQuery` state variable to the value of the input\n      };\n\nreturn(\n   <div>\n            \n    {posts.map((post) => {\n        <div key={post._id}>\n            <h1>{post.content}</h1>\n        </div>\n    })}\n   </div> \n)\n  \n\n}\n\nexport default HomePage"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,OAAO,GAAG,gCAAgC;AAIhD,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAEhB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC;;EAEA,MAAM,CAACU,SAAS,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE/C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C;;EAEA,SAASc,QAAQA,CAAA,EAAE;IACfZ,KAAK,CAACa,GAAG,CAACV,OAAO,CAAC,CACbW,IAAI,CAAEC,QAAQ,IAAK;MAChBR,QAAQ,CAACQ,QAAQ,CAACC,IAAI,CAAC;MACvBC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACC,IAAI,CAAC;IAC9B,CAAC,CAAC,CAGDG,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC,CAAC;EAC3C;EAGA,SAASC,WAAWA,CAAA,EAAE;IAClBrB,KAAK,CAACa,GAAG,CAACV,OAAO,CAAC,CACbW,IAAI,CAAEC,QAAQ,IAAK;MAChBJ,WAAW,CAACI,QAAQ,CAACC,IAAI,CAAC;MAC1BC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACC,IAAI,CAAC;IAC9B,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC,CAAC;EAC3C;EAEA,MAAME,iBAAiB,GAAG,CAAChB,KAAK,EAAEI,QAAQ,CAAC;EAE3CX,SAAS,CAAC,MAAM;IACZa,QAAQ,EAAE;IACV;EACJ,CAAC,EAAC,EAAE,CAAC;EAELb,SAAS,CAAC,MAAM;IAAE;IACd,MAAMwB,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACFC,UAAU,CAAC,IAAI,CAAC;QAChB,MAAM;UAAER;QAAK,CAAC,GAAG,MAAMhB,KAAK,CAACa,GAAG,CAACV,OAAO,CAAC,CAAC,CAAC;QAC3CI,QAAQ,CAACS,IAAI,CAAC,CAAC,CAAC;QAChBQ,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACrB,CAAC,CAAC,OAAOJ,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IACDK,UAAU,EAAE,CAAC,CAAC;EAChB,CAAC,EAAE,CAACC,WAAW,CAAC,CAAC,CAAC,CAAC;EACnB,MAAMC,uBAAuB,GAAIC,KAAK,IAAK;IAAE;IAC3CC,cAAc,CAACD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EACtC,CAAC;;EAEP,oBACG7B,OAAA;IAAA8B,QAAA,EAEE1B,KAAK,CAAC2B,GAAG,CAAEC,IAAI,IAAK;MACjB,aAAAhC,OAAA;QAAA8B,QAAA,eACI9B,OAAA;UAAA8B,QAAA,EAAKE,IAAI,CAACC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAM,GADjBL,IAAI,CAACM,GAAG;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEZ;IACV,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAIT;AAAClC,EAAA,CAnEQD,QAAQ;AAAAqC,EAAA,GAARrC,QAAQ;AAqEjB,eAAeA,QAAQ;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}